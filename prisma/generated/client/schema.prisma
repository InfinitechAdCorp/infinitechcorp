generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BlogPost {
  id         Int      @id @default(autoincrement())
  title      String
  content    String   @db.Text
  date       DateTime @default(now())
  authorName String
  image      String
}

model Service {
  id          Int    @id @default(autoincrement())
  image       String
  title       String
  description String @db.Text
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  position  String
  company   String
  feedback  String   @db.Text
  imageUrl  String
  createdAt DateTime @default(now())
}

model VideoTestimonial {
  id         Int    @id @default(autoincrement())
  videoUrl   String
  clientName String
}

model EventData {
  id         Int      @id @default(autoincrement())
  title      String
  content    String   @db.Text
  date       DateTime @default(now())
  authorName String
  image      String
}

model Certificate {
  id        Int      @id @default(autoincrement())
  imageUrl  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SolutionData {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String
  link     String
}

model Partner {
  id       Int    @id @default(autoincrement())
  imageUrl String
}

model TeamMember {
  id           Int                     @id @default(autoincrement())
  name         String
  title        String
  imageUrl     String
  credentials  String
  certificates TeamMemberCertificate[]
}

model TeamMemberCertificate {
  id           Int        @id @default(autoincrement())
  imageUrl     String
  teamMember   TeamMember @relation(fields: [teamMemberId], references: [id], onDelete: Cascade)
  teamMemberId Int
}

model Plan {
  id           Int      @id @default(autoincrement())
  name         PlanType
  serviceTitle String
  description  String   @db.Text
  price        Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum PlanType {
  Basic
  Standard
  Advance
  Premium
  Vip
  Addons
}

model Hiring {
  id       Int    @id @default(autoincrement())
  position String
  location String
  jobType  String
  link     String
}
